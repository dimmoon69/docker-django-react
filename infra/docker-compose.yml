version: '3.4'

services:
  foodgram-db:
    image: postgres:13.0-alpine
    container_name: "foodgram-db"
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../backend/.env

  foodgram-web:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: "foodgram-web"
    restart: on-failure
    command: sh start.sh
    volumes:
      - ../backend/:/usr/src/app
    environment:
      WAIT-HOSTS: foodgram-db
    ports:
      - "8000:8000"
    env_file:
      - ../backend/.env
    depends_on:
      - foodgram-db

  foodgram-ui:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: "foodgram-ui"
    environment:
      WAIT-HOSTS: foodgram-db, foodgram-web
    volumes:
      - ../backend/static:/mnt/static:ro
      - ../backend/media:/mnt/media:rw
    ports:
      - '80:80'
    stdin_open: true
    depends_on:
      - foodgram-db
      - foodgram-web


volumes:
  postgres_data:

networks:
  dev:
    external: false
