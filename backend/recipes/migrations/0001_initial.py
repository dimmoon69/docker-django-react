# Generated by Django 3.2.15 on 2022-10-11 12:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Favorites",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Избранное",
                "verbose_name_plural": "Избранные",
                "ordering": ("-id",),
            },
        ),
        migrations.CreateModel(
            name="Follow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Подписки",
                "verbose_name_plural": "Подписки",
            },
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Введите название ингредиента",
                        max_length=200,
                        verbose_name="Название ингредиента",
                    ),
                ),
                (
                    "measurement_unit",
                    models.CharField(
                        help_text="Введите единицу измерения ингредиента",
                        max_length=200,
                        verbose_name="Единица измерения",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ингредиент",
                "verbose_name_plural": "Ингредиенты",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=200, verbose_name="Название рецепта"
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        help_text="Введите описание рецепта",
                        max_length=2048,
                        verbose_name="Описание рецепта",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="recipe/images",
                        verbose_name="Изображение для рецепта",
                    ),
                ),
                (
                    "cooking_time",
                    models.PositiveSmallIntegerField(
                        help_text="Время приготовления (в минутах)",
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, message="Введите число начиная от 1"
                            )
                        ],
                        verbose_name="Время приготовления (в минутах)",
                    ),
                ),
                (
                    "pub_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время написания рецепта"
                    ),
                ),
            ],
            options={
                "verbose_name": "Рецепт",
                "verbose_name_plural": "Рецепты",
                "ordering": ("-pub_date",),
            },
        ),
        migrations.CreateModel(
            name="RecipeIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="Количество ингредиентов",
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, message="Введите число начиная от 1"
                            )
                        ],
                        verbose_name="Количество ингредиентов",
                    ),
                ),
            ],
            options={
                "verbose_name": "Рецепт и ингредиент",
                "verbose_name_plural": "Рецепт и ингредиенты",
            },
        ),
        migrations.CreateModel(
            name="RecipeTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тег рецепта",
                "verbose_name_plural": "Теги рецепта",
                "ordering": ("-id",),
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Введите название тега",
                        max_length=200,
                        unique=True,
                        verbose_name="Название тега",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Введите цветовой код в hex-формате",
                        max_length=7,
                        unique=True,
                        verbose_name="Цвет в HEX",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        help_text="Введите уникальный префикс",
                        max_length=200,
                        unique=True,
                        verbose_name="Уникальный префикс",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тег",
                "verbose_name_plural": "Теги",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="ShoppingCart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        help_text="Рецепт в списке покупок",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cart_recipe",
                        to="recipes.recipe",
                        verbose_name="Рецепт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Покупка",
                "verbose_name_plural": "Покупки",
                "ordering": ("-id",),
            },
        ),
    ]
